{"componentChunkName":"component---src-templates-blog-template-js","path":"/nodemon-auto-reload","result":{"data":{"mdx":{"id":"f8f58b40-5f0c-5c1e-a3a0-7ce70e722e45","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/nodemon-auto-reload\",\n  \"date\": \"2016-06-21\",\n  \"title\": \"üîÉ Using nodemon for auto-reload of server after code change for node.js applications\",\n  \"description\": \"The compose utility in the styled-system is used to combine multiple style functions together into one\",\n  \"published\": true,\n  \"tags\": [\"node\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Was a newbie to node.js, whenever I make a change in the code, In the terminal i used to keep on hitting Ctrl+C and then Up Arrow and restart the server.\"), mdx(\"p\", null, \"After few days, found out \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/remy/nodemon\"\n  }), \"nodemon\"), \", basically nodemon monitors any code changes in your node app and it automatically restarts the server.\"), mdx(\"h3\", null, \"Steps to use nodemon in any node app\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-bash\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"npm\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"install\"), \" -g nodemon\"))), mdx(\"p\", null, \"and\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-bash\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"nodemon ./server.js localhost \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"3000\")))), mdx(\"p\", null, \"the port number is optional and app specific, if the application accepted a host and port as the arguments, then it\\u2019s yours.\"), mdx(\"p\", null, \"nodemon also supports running and monitoring \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://coffeescript.org/\"\n  }), \"coffee-script\"), \" apps\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-bash\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"nodemon server.coffee\"))), mdx(\"p\", null, \"NOTE: If no script is given, nodemon will look for the package.json file and if exists, the nodemon will run the file associated with the main property.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"date":"June 21, 2016","path":"/nodemon-auto-reload","title":"üîÉ Using nodemon for auto-reload of server after code change for node.js applications","description":"The compose utility in the styled-system is used to combine multiple style functions together into one","published":true,"hero_image":null,"tags":["node"]},"fields":{"readingTime":{"text":"1 min read"}},"headings":[{"depth":3,"value":"Steps to use nodemon in any node app"}]}},"pageContext":{"previous":{"frontmatter":{"title":"üí° How Gridsome works with GitHub Pages","path":"/gridsome-with-github","tags":["gridsome","static-site"],"published":true}},"next":null,"posts":[{"node":{"frontmatter":{"title":"üöÄ Deploying any app to GitHub Pages","path":"/deploying-any-app-to-github-pages","tags":["hosting","static-site"],"published":true}}},{"node":{"frontmatter":{"title":"üè¢ How I structure React app","path":"/how-i-structure-react-app","tags":["React"],"published":false}}},{"node":{"frontmatter":{"title":"üíª nifty npm tips","path":"/nifty-npm-tips","tags":["tips","npm"],"published":false}}},{"node":{"frontmatter":{"title":"üí´ Understanding Recoil - The state management system for React.","path":"/react-recoil","tags":["react","recoil"],"published":true}}},{"node":{"frontmatter":{"title":"‚õì The optional chaining operator in JavaScript","path":"/optional-chaining","tags":["javascript üíõ","es2020"],"published":true}}},{"node":{"frontmatter":{"title":"ü§î What is context path ?","path":"/context-path","tags":["javascript üíõ"],"published":true}}},{"node":{"frontmatter":{"title":"üé≥ My Top Ten VS Code Plugins","path":"/my-top-ten-vs-code-plugins","tags":["VSCode"],"published":true}}},{"node":{"frontmatter":{"title":"üßê What is compose-in-styled-system ?","path":"/compose-in-styled-system","tags":["styled-system"],"published":true}}},{"node":{"frontmatter":{"title":"üí° How Gridsome works with GitHub Pages","path":"/gridsome-with-github","tags":["gridsome","static-site"],"published":true}}},{"node":{"frontmatter":{"title":"üîÉ Using nodemon for auto-reload of server after code change for node.js applications","path":"/nodemon-auto-reload","tags":["node"],"published":true}}}]}}}